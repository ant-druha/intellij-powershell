plugins {
    id "java"
    id "org.jetbrains.intellij" version "1.3.0"
    id "org.jetbrains.kotlin.jvm" version "1.5.10"
}

intellij {
    type = 'IC'
    version = '213.5744.223'// https://www.jetbrains.com/intellij-repository/[releases|snapshots]
    plugins = ['IntelliLang', 'terminal']
    pluginName = 'PowerShell'
    updateSinceUntilBuild = false
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/gen'
        }
        resources {
            exclude '**.bnf'
            exclude '**.flex'
        }
    }
}

group 'com.intellij.plugin'
version '2.0.10'

repositories {
    mavenCentral()
    maven {
        url "https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-common"
    }
}

dependencies {
    implementation group: 'com.kohlschutter.junixsocket', name: 'junixsocket-common', version: '2.3.3'
    implementation group: 'com.kohlschutter.junixsocket', name: 'junixsocket-native-common', version: '2.3.3'

    implementation ("org.eclipse.lsp4j:org.eclipse.lsp4j:0.3.0") {
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'com.google.guava', module: 'guava'
    }
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation 'junit:junit:4.11'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile).all {
    options.encoding = "UTF-8"
}
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        apiVersion = '1.4'
        languageVersion = '1.4'
        jvmTarget = '1.8'
    }
}
sourceCompatibility = 1.8

prepareSandbox {
    from("${project.rootDir}/language_host/current") {
        into "${intellij.pluginName.get()}/lib/"
    }
}